import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.tree import plot_tree
import matplotlib.pyplot as plt

# Importing the dataset
dataset = pd.read_csv("/content/IRIS.csv")

# Splitting the dataset into features (X) and target variable (y)
X = dataset.drop('Class', axis=1)
y = dataset['Class']

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Decision Tree classifier
classifier = DecisionTreeClassifier()

# Train the Decision Tree classifier
classifier.fit(X_train, y_train)

# Predict the target variable for the test set
y_pred = classifier.predict(X_test)

# Calculate the accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Display the confusion matrix
conf_matrix = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(conf_matrix)

# Display the Decision Tree
plt.figure(figsize=(10, 7))
plot_tree(classifier, feature_names=X.columns, class_names=dataset['Class'].unique(), filled=True)
plt.show()
